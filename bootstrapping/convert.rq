base  <http://weverify.eu/resource/>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix puml:     <http://plantuml.com/ontology#>
prefix schema: <http://schema.org/>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix wev: <http://weverify.eu/ontology/>
prefix geoname: <http://sws.geonames.org/>

construct {
    ?claimUri a schema:Claim ;
              schema:text ?claimReview_claimReviewed ;
              schema:appearance ?appearance ;
              schema:dateCreated ?review_date ;
              schema:datePublished ?review_date ;
              schema:author ?authorUri .

    ?appearance a wev:Appearance ;
               schema:url ?creativeWork_author_sameAs ;
               schema:author ?creativeWork_author_name ;
               schema:dateCreated ?appearance_date ;
               schema:datePublished ?appearance_date .

    ?reviewUri a schema:ClaimReview ;
               schema:itemReviewed ?claimUri ;
               schema:author ?authorUri ;
               schema:reviewBody ?extra_body ;
               schema:dateCreated ?review_date ;
               schema:datePublished ?review_date ;
               schema:sameAs ?claimReview_url ;
               schema:reviewRating ?normalizedRatingUri , ?sourceRatingUri .

    ?authorUri a schema:Organization ;
               schema:name ?claimReview_author_name ;
               schema:sameAs ?claimReview_author_url .

    ?normalizedRatingUri a wev:NormalizedRating ;
                         schema:bestRating "TRUE" ;
                         schema:ratingValue ?rating_alternateName_normalized ;
                         schema:worstRating "FALSE" .

    ?sourceRatingUri a wev:SourceRating ;
                     schema:bestRating ?rating_bestRating ;
                     schema:ratingValue ?rating_ratingValue ;
                     schema:worstRating ?rating_worstRating .
               
} where {
    bind (replace(replace(str(?claimReview_url), "(/|.html)$", ""), "http.*/([^/]*)", "$1") as ?urlName)
    bind (iri(concat("Claim/", encode_for_uri(?claimReview_author_name), "/", ?urlName)) as ?claimUri)
    bind (iri(concat("ClaimReview/", encode_for_uri(?claimReview_author_name), "/", ?a, "/", ?urlName)) as ?reviewUri)
    bind (1+"" as ?UNDEF)
    bind (if(bound(?creativeWork_author_sameAs), iri(concat("Appearance/", struuid())), ?UNDEF) as ?appearance)
    bind (if(bound(?claimReview_author_name), iri(concat("Organization/", encode_for_uri(?claimReview_author_name))), ?UNDEF) as ?authorUri)
    bind (if(bound(?rating_alternateName_normalized), iri(concat("Rating/Normalized/", ?rating_alternateName_normalized)), ?UNDEF) as ?normalizedRatingUri)
    bind (if(bound(?rating_ratingValue), iri(concat("Rating/", encode_for_uri(?claimReview_author_name) , "/", encode_for_uri(?rating_ratingValue))), ?UNDEF) as ?sourceRatingUri)
    bind(coalesce(xsd:dateTime(?creativeWork_datePublished), xsd:dateTime(strdt(?creativeWork_datePublished, xsd:date))) as ?appearance_date)
    bind(coalesce(xsd:dateTime(?claimReview_datePublished), xsd:dateTime(strdt(?claimReview_datePublished, xsd:date))) as ?review_date)
}

base  <http://weverify.eu/resource/>

construct {
    ?reviewUri schema:hasPart ?eviUri .
    
    ?eviUri a wev:SupportingEvidence ;
            schema:additionalType wev:ExternalEvidence ;
            schema:about ?eviItemUri .

    ?eviItemUri a schema:CreativeWork ;
            schema:url ?eviLink .
} where {
    bind (1+"" as ?UNDEF)    
    bind (replace(replace(str(?claimReview_url), "(/|.html)$", ""), "http.*/([^/]*)", "$1") as ?urlName)
    bind (iri(concat("ClaimReview/", encode_for_uri(?claimReview_author_name), "/", ?a, "/", ?urlName)) as ?reviewUri)
    bind(coalesce(replace(replace(?extra_refered_links, "[\\[\\]]", ""), " #", " "), "") as ?eviList)
    ?eviSplit apf:strSplit ( ?eviList ", ")
    bind(if(bound(?extra_refered_links), ?eviSplit, ?eviList) as ?eviStr)
    bind(if(bound(?extra_refered_links), iri(concat("SupportingEvidence/", struuid())), ?UNDEF) as ?eviUri)
    bind(if(bound(?extra_refered_links), iri(concat("CreativeWork/", struuid())), ?UNDEF) as ?eviItemUri)
    bind(coalesce(if(regex(?eviStr, "[ |']|^[^?#]+[\\(\\)\\[\\]]|^http[s]*://http") , ?UNDEF, iri(?eviStr)), ?eviStr) as ?eviLink)
}
